version: '3.8'

services:
  # PostgreSQL + PostGIS Database
  postgres:
    image: postgis/postgis:15-3.3
    container_name: nyc-housing-db
    environment:
      POSTGRES_DB: nyc_housing
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/migrations:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # FastAPI Backend
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nyc-housing-backend
    environment:
      - DATA_PROVIDER=database
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=postgres
      - DB_PASSWORD=password
      - DB_NAME=nyc_housing
      - SOCRATA_APP_TOKEN=${SOCRATA_APP_TOKEN}
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app/backend
    command: python -m uvicorn backend.main:app --host 0.0.0.0 --port 8000 --reload

  # Streamlit Frontend
  frontend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nyc-housing-frontend
    environment:
      - BACKEND_URL=http://backend:8000
    ports:
      - "8501:8501"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app/frontend
    command: streamlit run frontend/app.py --server.port=8501 --server.address=0.0.0.0

volumes:
  postgres_data:
